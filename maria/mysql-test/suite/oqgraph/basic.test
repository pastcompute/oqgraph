--disable_warnings
DROP TABLE IF EXISTS graph_base;
DROP TABLE IF EXISTS graph;
DROP TABLE IF EXISTS graph2;
--enable_warnings

CREATE TABLE graph2 (
    latch   VARCHAR(32) NULL,
    origid  BIGINT    UNSIGNED NULL,
    destid  BIGINT    UNSIGNED NULL,
    weight  DOUBLE    NULL,
    seq     BIGINT    UNSIGNED NULL,
    linkid  BIGINT    UNSIGNED NULL,
    KEY (latch, origid, destid) USING HASH,
    KEY (latch, destid, origid) USING HASH
  ) ENGINE=OQGRAPH DATA_TABLE='graph_base' ORIGID='from_id', DESTID='to_id';
# Because the backing store graph_base doesnt exist yet, the select should fail  
--error S42S02
SELECT * FROM graph2 WHERE latch='dijkstras' AND origid=1 AND destid=6;
DROP TABLE graph2;

# Create the backing store
CREATE TABLE graph_base (
    from_id INT UNSIGNED NOT NULL,
    to_id INT UNSIGNED NOT NULL,
    PRIMARY KEY (from_id,to_id),
    INDEX (to_id)
  ) ENGINE=MyISAM;


CREATE TABLE graph (
    latch   VARCHAR(32) NULL,
    origid  BIGINT    UNSIGNED NULL,
    destid  BIGINT    UNSIGNED NULL,
    weight  DOUBLE    NULL,
    seq     BIGINT    UNSIGNED NULL,
    linkid  BIGINT    UNSIGNED NULL,
    KEY (latch, origid, destid) USING HASH,
    KEY (latch, destid, origid) USING HASH
  ) ENGINE=OQGRAPH DATA_TABLE='graph_base' ORIGID='from_id', DESTID='to_id';


INSERT INTO graph_base(from_id, to_id) VALUES (1,2), (2,1);
INSERT INTO graph_base(from_id, to_id) VALUES (1,3), (3,1);
INSERT INTO graph_base(from_id, to_id) VALUES (3,4), (4,3);
INSERT INTO graph_base(from_id, to_id) VALUES (5,6), (6,5);

SELECT * FROM graph WHERE latch = 'breadth_first' AND origid = 1 AND weight = 1;
# The next works, we allow stringized latch integer to ease migration
SELECT * FROM graph WHERE latch = '2' AND origid = 1 AND weight = 1;
# Expect the next to return no results, due to autocast and use of deprecated syntax...
--echo # Expect no result, because of autocast and deprecated syntax
SELECT * FROM graph WHERE latch = 2 AND origid = 1 AND weight = 1;

--echo # Expect no result between 1,6 because no connection exists
SELECT * FROM graph WHERE latch='dijkstras' AND origid=1 AND destid=6;
SELECT * FROM graph WHERE latch='1' AND origid=1 AND destid=6;
--echo # Expect result between 4,1 because connection exists via 3
SELECT * FROM graph WHERE latch='dijkstras' AND origid=1 AND destid=4;
SELECT * FROM graph WHERE latch='1' AND origid=1 AND destid=4;
--echo # and the reverse direction
SELECT * FROM graph WHERE latch='dijkstras' AND origid=4 AND destid=1;
SELECT * FROM graph WHERE latch='1' AND origid=4 AND destid=1;

SELECT * FROM graph WHERE latch='no_search' and destid=2 and origid=1;

--echo # Expect no result, because of autocast and deprecated syntax
SELECT * FROM graph WHERE latch=0 and destid=2 and origid=1;

#-- FIXME SELECT * FROM graph2 WHERE latch='0' and destid=2 and origid=1;          -- causes assertion (at least in debug build, havent tested normal)
#-- sql/mysqld(my_print_stacktrace+0x35)[0xdbbc02]
#-- sql/mysqld(handle_fatal_signal+0x355)[0x7dfd05]
#-- /lib/libpthread.so.0(+0xeff0)[0x7f4810addff0]
#-- /lib/libc.so.6(gsignal+0x35)[0x7f480feda1b5]
#-- /lib/libc.so.6(abort+0x180)[0x7f480fedcfc0]
#-- /lib/libc.so.6(__assert_fail+0xf1)[0x7f480fed3301]
#-- sql/mysqld(_ZN7handler8ha_resetEv+0x8b)[0x7eb6a9]
#-- sql/mysqld(_Z18close_thread_tableP3THDPP5TABLE+0x297)[0x5b1207]
#-- sql/mysqld[0x5b09c4]
#-- sql/mysqld(_Z19close_thread_tablesP3THD+0x33f)[0x5b0f5d]
#-- sql/mysqld(_Z21mysql_execute_commandP3THD+0x7fe9)[0x61cc6b]
#-- sql/mysqld(_Z11mysql_parseP3THDPcjP12Parser_state+0x268)[0x61f9ec]
#-- sql/mysqld(_Z16dispatch_command19enum_server_commandP3THDPcj+0xc3e)[0x6129ba]
#-- sql/mysqld(_Z10do_commandP3THD+0x33f)[0x611b35]
#-- sql/mysqld(_Z24do_handle_one_connectionP3THD+0x1f6)[0x721ba9]
#-- sql/mysqld(handle_one_connection+0x33)[0x721651]
#-- /lib/libpthread.so.0(+0x68ca)[0x7f4810ad58ca]
#-- /lib/libc.so.6(clone+0x6d)[0x7f480ff7792d]

--echo # Expect no result, because of NULL latch
SELECT * FROM graph WHERE latch=NULL and destid=2 and origid=1;

--echo # With no latch, original data, filtered by destid, etc if present
SELECT * FROM graph;
SELECT * FROM graph WHERE destid=2 and origid=1;

SELECT * FROM graph WHERE latch = 'breadth_first' AND origid = 1 AND (weight = 1 OR weight = 2);

--echo # Now we add a connection from 4->6 
INSERT INTO graph_base (from_id,to_id) VALUES (4,6);

--echo # And delete all references to node 5
DELETE FROM graph_base WHERE from_id=5;
DELETE FROM graph_base WHERE from_id=3 AND to_id=5;

--echo # which means there is a path in one direction only 1>3>4>6
SELECT * FROM graph WHERE latch='dijkstras' AND origid=1 AND destid=6;
--echo # but not 6>4>3>1
SELECT * FROM graph WHERE latch='dijkstras' AND origid=6 AND destid=1;

DELETE FROM graph_base;
FLUSH TABLES;
TRUNCATE TABLE graph_base;

DROP TABLE graph_base;

# Expect error if we pull the table out from under
--error S42S02
SELECT * FROM graph WHERE latch='dijkstras' AND origid=1 AND destid=6;

DROP TABLE graph;

